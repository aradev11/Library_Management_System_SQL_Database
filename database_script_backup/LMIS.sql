-- Powerd By: MySQL
-- version 8.0.22 MySQL Community Server - GPL
-- https://www.mysql.com/
--
-- Host: DEFAULT HOST 
-- Generation Time: Jan 20, 2021 at 11:42 PM
-- Database Name: Book_Store_MIS
-- Developed By: Alireza.dev "Fullstack Developer"
-- Contact Number: +93748482555
-- Emial: eng.ara.devs@gmail.com
-- Social Contact: 
-- -- -- Facebook.com/alireza.ehaam.mohsini
-- -- -- discord.com/
-- -- -- github.com/Alireza-Ehaam

-- ---------------------------------------
DROP DATABASE IF EXISTS `Book_Store_MIS`;
CREATE DATABASE IF NOT EXISTS `Book_Store_MIS`; 
USE `Book_Store_MIS`;

SET NAMES utf8 ;
SET character_set_client = utf8mb4 ;

-- CREATING TABLE BOOK WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `book`;
CREATE TABLE IF NOT EXISTS `book` (
  `isbn` VARCHAR(32) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `author` INT NOT NULL,
  `cat` INT NOT NULL,
  `lang` INT NOT NULL,
  `edition` TINYINT NOT NULL DEFAULT 0,
  `volume` TINYINT NOT NULL DEFAULT 0,
  `wrapper` TINYINT NULL,
  `unit` INT NOT NULL,
  `price` DECIMAL(9,2) NOT NULL DEFAULT '0.00',
  constraint book_pk PRIMARY KEY (`isbn`, `name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE BOOK_DETAIL WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `book_detail`;
CREATE TABLE IF NOT EXISTS `book_detail` (
  `isbn` VARCHAR(32) NOT NULL UNIQUE,
  `view` INT NULL DEFAULT 0,
  `content` TEXT NULL,
  `shelf` VARCHAR(255) NULL,
  `publisher` INT NOT NULL,
  `pdf` VARCHAR(128) NULL,
  `img` VARCHAR(128) NOT NULL DEFAULT 'demo_book.png',
  `transilator` INT NULL DEFAULT 0,
  `enter` DATETIME NOT NULL,
  `pub_date` DATE NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;



-- CREATING TABLE AUTHOR WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `author`;
CREATE TABLE `author` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(32) NOT NULL,
  `last_name` VARCHAR(32) NOT NULL,
  `img` VARCHAR(128) NOT NULL DEFAULT 'avatar.png',
  `about` TEXT NOT NULL,
  `email` VARCHAR(128) NULL UNIQUE DEFAULT '',
  `website` VARCHAR(128) NULL UNIQUE DEFAULT '',
  constraint author_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE TRANSILATOR WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `transilator`;
CREATE TABLE `transilator` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(32) NOT NULL,
  `last_name` VARCHAR(32) NOT NULL,
  `img` VARCHAR(128) NOT NULL DEFAULT 'avatar.png',
  `about` TEXT NOT NULL,
  `email` VARCHAR(128) NULL UNIQUE DEFAULT '',
  `website` VARCHAR(128) NULL UNIQUE DEFAULT '',
  constraint author_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE CUSTOMER WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `customer`;
CREATE TABLE `customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idcard` INT NULL,
  `firstname` VARCHAR(32) NOT NULL,
  `last_name` VARCHAR(32) NULL,
  `is_active` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint customer_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE CUSTOMER_DETAIL WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `customer_detail`;
CREATE TABLE `customer_detail` (
  `id` INT NOT NULL UNIQUE,
  `street` VARCHAR(45) NOT NULL,
  `street2` VARCHAR(45) NULL,
  `country` INT NOT NULL,
  `city` INT NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `phone` INT NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE EMPLOYEE WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `employee`;
CREATE TABLE `employee` (
  `id` INT NOT NULL,
  `idcard` VARCHAR(128) NOT NULL UNIQUE,
  `first_name` VARCHAR(32) NOT NULL,
  `last_name` VARCHAR(32) NOT NULL,
  `father_name` VARCHAR(32) NOT NULL,
  `is_active` TINYINT NOT NULL DEFAULT 0,
  `brand` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint employee_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE EMPLOYEE_DETAIL WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `employee_detail`;
CREATE TABLE `employee_detail` (
  `id` INT NOT NULL UNIQUE,
  `street` VARCHAR(45) NOT  NULL,
  `street2` VARCHAR(45) NULL,
  `country` INT NOT NULL,
  `city` INT NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `phone` INT NOT NULL,
  `tel` INT NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE USERS WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `employee` INT NOT NULL UNIQUE,
  `username` VARCHAR(128) NOT NULL UNIQUE,
  `password` VARCHAR(32) NOT NULL,
  `is_active` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE CONTRACT WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `contract`;
CREATE TABLE `contract` (
  `employee` INT NOT  NULL UNIQUE,
  `start_time` TIME NOT NULL,
  `type` ENUM('1','2','3') NOT NULL DEFAULT '1',
  `end_time` TIME NOT NULL,
  `contract_date` DATE NOT NULL,
  `dissolve_date` DATE NULL,
  `sallary` DOUBLE NOT NULL DEFAULT 0,
  `position` INT NOT NULL,
  `unit` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE COUNTRY WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `country`;
CREATE TABLE `country` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT  NULL,
  `lang` VARCHAR(32) NOT NULL,
  `code` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint cnt_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE UNIT WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `unit`;
CREATE TABLE `unit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT  NULL,
  `sambol` CHAR(2) NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint unit_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE CITY WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `city`;
CREATE TABLE `city` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT  NULL,
  `country` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint city_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE PUBLISHER WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `publisher`;
CREATE TABLE `publisher` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT  NULL,
  `address` VARCHAR(128) NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `phone` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint city_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE CATEGORY WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `type` ENUM('0', '1','2') NOT NULL DEFAULT '0',
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint category_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE BLOG WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NOT NULL,
  `text` TEXT NOT NULL,
  `img` VARCHAR(128) NULL  DEFAULT 'post.png',
  `poster` INT NOT NULL,
  `cat` INT NOT  NULL,
  `view` INT NOT  NULL,
  `is_approved` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint blog_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE COMMENT WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `comments`;
CREATE TABLE IF NOT EXISTS `comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(32) NOT NULL,
  `lastName` VARCHAR(32) NOT NULL,
  `text` TEXT NOT NULL,
  `post` INT NOT NULL, -- FK BLOG.id
  `employee` INT NOT NULL, -- FK EMPLOYEE.id
  `is_approved` TINYINT NOT NULL DEFAULT 0,
  `email` VARCHAR(128) NOT  NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint comment_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE REPLY WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `reply`;
CREATE TABLE IF NOT EXISTS `reply` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `post` INT NOT NULL,
  `comments` INT NOT NULL,
  `text` TEXT NOT NULL,
  `poster` INT NOT NULL,
  `is_approved` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint reply_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE BRAND WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `brand`;
CREATE TABLE IF NOT EXISTS `brand` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL DEFAULT "",
  `logo` VARCHAR(128) NOT NULL,
  `type` VARCHAR(128) NOT NULL,
  `started_year` YEAR NOT NULL,
  `about` TEXT NOT NULL ,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint brand_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE BRANDDEFAIL WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `brand_detail`;
CREATE TABLE IF NOT EXISTS `brand_detail` (
  `id` INT NOT NULL UNIQUE,
  `email` VARCHAR(64) NOT NULL DEFAULT "",
  `phone` INT(10) NOT NULL,
  `street` VARCHAR(64) NOT NULL,
  `stree2` VARCHAR(64) NULL DEFAULT "",
  `country` INT NOT NULL,
  `city` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE POSITION WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `position`;
CREATE TABLE IF NOT EXISTS `position` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `qualification` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint position_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE OVERTIME WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `overtime`;
CREATE TABLE IF NOT EXISTS `overtime` (
  `employee` INT NOT NULL UNIQUE,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `date` DATE NOT NULL,
  `amount_untax` DOUBLE NOT NULL DEFAULT 0,
  `tax` INT NOT NULL,
  `unit` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE WORKTIME WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `worktime`;
CREATE TABLE IF NOT EXISTS `worktime` (
  `employee` INT NOT NULL UNIQUE,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `start_free_time` TIME NOT NULL,
  `end_free_time` TIME NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE ORDER WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `order`;
CREATE TABLE IF NOT EXISTS `order` (
  `id` INT NOT NULL AUTO_INCREMENT,  
  `book` VARCHAR(32) NOT NULL,
  `type` ENUM("1","2","3","4") NOT NULL DEFAULT "1",
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `phone` INT NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `street2` VARCHAR(45) NULL,
  `city` INT NOT NULL,
  `country` INT NOT NULL,
  `note` TEXT NULL,
  `is_active` TINYINT NOT NULL DEFAULT 0,
  `received_date` DATETIME NOT NULL,
  `delivery_date` DATETIME NOT NULL,
  `exp_date` DATETIME NOT NULL,
  `delivery_cost` DOUBLE NOT NULL DEFAULT 0,
  `order_response` TINYINT NOT NULL DEFAULT 0,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint order_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE RESPONSE WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `response`;
CREATE TABLE IF NOT EXISTS `response` (
  `order` INT NOT NULL UNIQUE,  
  `employee` INT NOT NULL,
  `note` TEXT NOT NULL,
  `date` DATETIME NOT NULL,
  `create_date` DATETIME NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE TAX WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `tax`;
CREATE TABLE IF NOT EXISTS `tax` (
  `id` INT NOT NULL UNIQUE AUTO_INCREMENT,  
  `symbol` CHAR NOT NULL DEFAULT '%',
  `number` TINYINT NOT NULL DEFAULT 15,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint tax_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE INVOICE WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `invoice`;
CREATE TABLE IF NOT EXISTS `invoice` (
  `id` INT NOT NULL UNIQUE AUTO_INCREMENT,  
  `sales` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  constraint invoice_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=100 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE PURCHASE WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `purchase`;
CREATE TABLE IF NOT EXISTS `purchase` (
  `id` INT NOT NULL AUTO_INCREMENT,  
  `employee` INT NOT NULL,
  `brand` INT NOT NULL,
  `customer` INT NOT NULL,
  `discount` INT NOT NULL DEFAULT 0,
  `billCost` INT NULL DEFAULT 0,
  `amount_untax` DOUBLE NOT NULL,
  `qty` INT NOT NULL DEFAULT 0,
  `note` TEXT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint purchase_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING TABLE PURCHASEITEMS WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `purchase_items`;
CREATE TABLE IF NOT EXISTS `purchase_items` (
  `id` INT NOT NULL AUTO_INCREMENT,  
  `purchase_number` INT NOT NULL,
  `book` VARCHAR(32) NOT NULL, 
  `tax` INT NOT NULL,
  `create_date` DATETIME NOT NULL,
  `last_update` TIMESTAMP NOT NULL,
  constraint purchaseItem_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;


-- CREATING TABLE SALES WITH ATTRIBUTES WITHOUT RELATIONSHIP
DROP TABLE IF EXISTS `sales`;
CREATE TABLE IF NOT EXISTS `sales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `purchase` INT NOT NULL UNIQUE,
  `create_date` DATETIME NOT NULL,
  constraint sales_pk PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

-- CREATING RELATIONSHIP BETWEEN BOOK FOREIGN-KEYS TABLES 
ALTER TABLE book ADD FOREIGN KEY (author) REFERENCES author (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE book ADD FOREIGN KEY (cat) REFERENCES category (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE book ADD FOREIGN KEY (lang) REFERENCES country (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE book ADD FOREIGN KEY (unit) REFERENCES unit (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN BOOKDETAIL FOREIGN-KEYS TABLES 
ALTER TABLE book_detail ADD FOREIGN KEY (isbn) REFERENCES book (isbn) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE book_detail ADD FOREIGN KEY (publisher) REFERENCES publisher (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE book_detail ADD FOREIGN KEY (transilator) REFERENCES transilator (id)ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE customer_detail ADD FOREIGN KEY (id) REFERENCES customer (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE customer_detail ADD FOREIGN KEY (country) REFERENCES country (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE customer_detail ADD FOREIGN KEY (city) REFERENCES city (id) ON UPDATE CASCADE ON DELETE NO ACTION;

ALTER TABLE employee_detail ADD FOREIGN KEY (id) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE employee ADD FOREIGN KEY (brand) REFERENCES brand (id) ON UPDATE CASCADE ON DELETE NO ACTION;
-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE users ADD FOREIGN KEY (employee) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE CASCADE;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE contract ADD FOREIGN KEY (employee) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE contract ADD FOREIGN KEY (unit) REFERENCES unit (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE city ADD FOREIGN KEY (country) REFERENCES country (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE blog ADD FOREIGN KEY (poster) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE blog ADD FOREIGN KEY (cat) REFERENCES category (id) ON UPDATE CASCADE ON DELETE NO ACTION;


-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE comments ADD FOREIGN KEY (post) REFERENCES blog (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE comments ADD FOREIGN KEY (employee) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE NO ACTION;


-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE reply ADD FOREIGN KEY (post) REFERENCES blog (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE reply ADD FOREIGN KEY (poster) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE reply ADD FOREIGN KEY (comments) REFERENCES comments (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE overtime ADD FOREIGN KEY (employee) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE worktime ADD FOREIGN KEY (employee) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE `order` ADD FOREIGN KEY (country) REFERENCES country (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE `order` ADD FOREIGN KEY (city) REFERENCES city (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE `order` ADD FOREIGN KEY (book) REFERENCES book (isbn) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE invoice ADD FOREIGN KEY (sales) REFERENCES sales (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE purchase ADD FOREIGN KEY (employee) REFERENCES employee (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE purchase ADD FOREIGN KEY (brand) REFERENCES brand (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE purchase ADD FOREIGN KEY (customer) REFERENCES customer (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE purchase_items ADD FOREIGN KEY (purchase_number) REFERENCES purchase (id) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE purchase_items ADD FOREIGN KEY (book) REFERENCES book (isbn) ON UPDATE CASCADE ON DELETE NO ACTION;
ALTER TABLE purchase_items ADD FOREIGN KEY (tax) REFERENCES tax (id) ON UPDATE CASCADE ON DELETE NO ACTION;

-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE sales ADD FOREIGN KEY (purchase) REFERENCES purchase (id) ON UPDATE CASCADE ON DELETE NO ACTION;
  
  
-- CREATING RELATIONSHIP BETWEEN AUTHOR FOREIGN-KEYS TABLES 
ALTER TABLE response ADD FOREIGN KEY (`order`) REFERENCES `order` (id) ON UPDATE CASCADE ON DELETE NO ACTION;
-- CREATING RELATIONSHIP BETWEEN BRAND_DETAIL FOREIGN-KEYS TABLES 
ALTER TABLE brand_detail ADD FOREIGN KEY (id) REFERENCES brand (id) ON UPDATE CASCADE ON DELETE CASCADE;